{"version":3,"sources":["component/Progress/Progress.style.js","component/Progress/Progress.jsx","Hooks/useEventListener.jsx","style/utility.style.js","component/Modal/Modal.style.js","api/api.js","component/Modal/Modal.jsx","component/Table/Table.style.js","component/Table/Table.jsx","component/Dash/Dash.style.js","component/Dash/Dash.jsx","component/Nav/Nav.style.js","component/Nav/Nav.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ProgressWrap","styled","div","Progress","props","background","color","percent","SmallLabel","Item","ItemBold","ProgWrap","ProgressCont","title","current","target","unit","useState","setPercent","remaining","setRemaining","useEffect","progress","Math","round","useEventListener","eventName","handler","element","window","savedHandler","useRef","addEventListener","eventListener","event","removeEventListener","GlobalStyle","createGlobalStyle","FlexContainer","main","justify","align","column","height","width","gap","padding","ModalOuter","open","ModalInner","Action","AddItem","Menu","InputNum","input","Line","Submit","button","apiInstance","require","create","baseURL","timeout","headers","Accepted","fetchDiary","requestDate","a","get","params","date","postFood","fName","fCalories","fProtein","key","post","name","protein","calories","postWater","amount","Modal","setOpen","caloriesVal","proteinVal","waterVal","targets","setToggleData","toggleData","e","id","food","setFood","water","setWater","submittingFood","setSubmittingFood","submittingWater","setSubmittingWater","foodName","setFoodName","setCalories","setProtein","waterFormVal","setwaterFormVal","setKey","onClick","tabIndex","role","size","stroke","strokeLinejoin","onSubmit","preventDefault","then","catch","error","console","log","value","onChange","required","type","placeholder","min","max","step","TableCont","table","TableHead","thead","ThRow","tr","ThCol","th","TbRow","TbCol","td","Table","foodDiary","diaryEntries","map","entry","DashWrap","DashGrid","Tile","spanning","text","h1","Title","Percent","Amount","Label","Dash","setFoodDiary","waterDiary","setWaterDiary","setCaloriesVal","setProteinVal","setWaterDrankVal","fetching","setFetching","length","reduce","n","isSubscribed","DateTime","now","toFormat","res","data","food_diary","water_diary","NavCont","NavTitle","AddCont","Nav","setDate","toLocaleString","month","day","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d4ef51.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const ProgressWrap = styled.div`\n    background: #e8e8e8;\n    width: 100%;\n    border-radius: 8px;\n`;\n\nexport const Progress = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    font-family: 'Poppins', sans-serif;\n    font-size: 10px;\n    padding: 1px 8px;\n    background: ${(props) => (props.background ? props.background : 'black')};\n    color: ${(props) => (props.color ? props.color : 'white')};\n    width: ${(props) => (props.percent ? `${props.percent}%` : '0%')};\n    min-width: min-content;\n    border-radius: 8px;\n    transition: all 0.15s ease-in-out;\n`;\n\nexport const SmallLabel = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const Item = styled.div`\n    color: grey;\n    font-size: 12px;\n    font-family: 'Poppins', sans-serif;\n`;\n\nexport const ItemBold = styled.div`\n    color: black;\n    font-size: 12px;\n    font-family: 'Poppins', sans-serif;\n`;\n\nexport const ProgWrap = styled.div`\n    display: block;\n    width: 100%;\n    margin-bottom: 16px;\n`;\n","/* eslint-disable no-console */\n/* eslint-disable func-names */\nimport {\n  React, useEffect, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ProgressWrap, Progress, SmallLabel, Item, ItemBold, ProgWrap,\n} from './Progress.style';\n\nconst ProgressCont = function (props) {\n  const {\n    title,\n    current,\n    target,\n    unit,\n    background,\n    color,\n  } = props;\n\n  const [percent, setPercent] = useState(0);\n  const [remaining, setRemaining] = useState(0);\n\n  useEffect(() => {\n    const progress = Math.round((current / target) * 100);\n    setRemaining(target - current);\n    setPercent(progress > 100 ? 100 : progress);\n  }, [current, target]);\n\n  return (\n    <ProgWrap>\n      <SmallLabel>\n        <ItemBold>{title}</ItemBold>\n        <Item>\n          Current:\n          {' '}\n          {current}\n          {unit}\n        </Item>\n      </SmallLabel>\n      <ProgressWrap>\n        <Progress background={background} color={color} percent={percent}>\n          {`${percent}%`}\n        </Progress>\n      </ProgressWrap>\n      <SmallLabel>\n        <Item>\n          Target\n          {' '}\n          {target}\n          {unit}\n        </Item>\n        <Item>\n          Remaining:\n          {' '}\n          {remaining}\n          {unit}\n        </Item>\n      </SmallLabel>\n    </ProgWrap>\n  );\n};\n\nProgressCont.propTypes = {\n  title: PropTypes.string.isRequired,\n  current: PropTypes.number.isRequired,\n  target: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired,\n  background: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default ProgressCont;\n","import { useEffect, useRef } from 'react';\n// Hook\nfunction useEventListener(eventName, handler, element = window) {\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event) => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      // eslint-disable-next-line consistent-return\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element], // Re-run if eventName or element changes\n  );\n}\n\nexport default useEventListener;\n","/* eslint-disable import/prefer-default-export */\nimport styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  html{\n    height: 100%;\n    scroll-behavior: smooth;\n  }\n  body {\n    background: white;\n    min-height: 100%;\n  }\n`;\n\nexport const FlexContainer = styled.main`\n  display: flex;\n  justify-content: ${(props) => props.justify};\n  align-items: ${(props) => props.align};\n  flex-direction: ${(props) => (props.column ? 'column' : 'row')};\n  height: ${(props) => (props.height ? props.height : 'auto')};\n  width: ${(props) => (props.width ? props.width : 'auto')};\n  gap: ${(props) => (props.gap ? props.gap : '0')};\n  padding: ${(props) => (props.padding ? props.padding : '0px')};\n`;\n","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport { FlexContainer } from '../../style/utility.style';\n\nexport const ModalOuter = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: ${(props) => (props.open ? 'grid' : 'none')};\n    place-items: center;\n    background: #00000080;\n    z-index: 1000;\n    cursor: pointer;\n`;\n\nexport const ModalInner = styled.div`\n    width: 80%;\n    min-height: 80%;\n    background: white;\n    border-radius: 16px;\n    padding: 1em;\n    cursor: auto;\n`;\n\nexport const Action = styled(FlexContainer)`\n    margin-bottom: 16px;\n`;\n\nexport const AddItem = styled(FlexContainer)`\n    flex: 1;\n    height: auto;\n    aspect-ratio: 1/1;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    border-radius: 16px;\n    font-family: 'Poppins', sans-serif;\n    color: white;\n    font-size: 16px;\n    background: ${(props) => (props.background ? props.background : 'none')};\n    cursor: pointer;\n    transform-origin: center;\n    transition: all 0.15s ease-in-out;\n\n\n    &:hover{\n        box-shadow: rgba(100, 100, 111, 0.2) 0px 0px 0px 0px;\n        transform: translateY(2px) scale(0.995);\n    }\n`;\n\nexport const Menu = styled.div`\n\n`;\n\nexport const InputNum = styled.input`\n    display: block;\n    width: 100%;\n    border: none;\n    padding: 4px 8px;\n    background: #ebebeb;\n    border-radius: 8px;\n    margin-bottom: 16px;\n`;\n\nexport const Line = styled.div`\n    display: block;\n    width: 100%;\n    border-bottom: 1px solid #ebebeb;\n    margin-bottom: 16px;\n`;\n\nexport const Submit = styled.button`\n    display: inline-block;\n    padding: 0.5em 2em;\n    font-size: 14px;\n    border-radius: 8px;\n    cursor: pointer;\n    background: ${(props) => (props.background ? props.background : 'none')};\n    color: white;\n    font-family: 'Poppins', sans-serif;\n    transition: all 0.15s ease-in-out;\n    border: none;\n\n    &:hover{\n        filter: brightness(0.5);\n    }\n`;\n","/* eslint-disable no-param-reassign */\nconst axios = require('axios');\n\nconst apiInstance = axios.create({\n  baseURL: 'https://dietapijr.herokuapp.com/',\n  timeout: 10000,\n  headers: {\n    Accepted: 'appication/json',\n    'Content-Type': 'application/json',\n  },\n});\n\n// Fetch food diary for given date\nexport const fetchDiary = async (requestDate) => apiInstance.get('diary/', { params: { date: requestDate } });\n\n// Post food entry\nexport const postFood = async (fName, fCalories, fProtein, key) => apiInstance.post('diary/food/', {\n  name: fName, protein: fProtein, calories: fCalories, key,\n});\n\n// Post water entry\nexport const postWater = async (amount, key) => apiInstance.post('diary/water', { amount, key });\n","/* eslint-disable no-console */\n/* eslint-disable func-names */\nimport {\n  React, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { IconToolsKitchen2, IconRipple } from '@tabler/icons';\nimport ProgressCont from '../Progress/Progress';\nimport useEventListener from '../../Hooks/useEventListener';\nimport {\n  ModalOuter, ModalInner, Action, AddItem, Menu, InputNum, Line, Submit,\n} from './Modal.style';\n\nimport { postFood, postWater } from '../../api/api';\n\nconst Modal = function (props) {\n  const {\n    open,\n    setOpen,\n    caloriesVal,\n    proteinVal,\n    waterVal,\n    targets,\n    setToggleData,\n    toggleData,\n  } = props;\n\n  // Event lister that closes the modal when the user\n  // clicks in the translucent area surrounding the modal\n  useEventListener('click', (e) => {\n    if (open && e.target.id === 'close-modal') {\n      setOpen(false);\n    }\n  });\n\n  // State for displaying the correct form\n  const [food, setFood] = useState(false);\n  const [water, setWater] = useState(false);\n\n  // Submitting form state\n  const [submittingFood, setSubmittingFood] = useState(false);\n  const [submittingWater, setSubmittingWater] = useState(false);\n\n  // Form values\n  const [foodName, setFoodName] = useState('');\n  const [calories, setCalories] = useState('');\n  const [protein, setProtein] = useState('');\n  const [waterFormVal, setwaterFormVal] = useState('');\n\n  const [key, setKey] = useState('');\n\n  // Handle the submit event for the food menu\n  const submitFood = (e) => {\n    e.preventDefault();\n    if (!submittingFood) {\n      setSubmittingFood(true);\n      postFood(foodName, calories, protein, key).then(() => {\n        setToggleData(!toggleData);\n        setSubmittingFood(false);\n      }).catch((error) => {\n        console.log(error);\n        setSubmittingFood(false);\n      });\n    }\n  };\n\n  // Handle the submit event for the water menu\n  const submitWater = (e) => {\n    e.preventDefault();\n    if (!submittingWater) {\n      setSubmittingWater(true);\n      postWater(waterFormVal, key).then(() => {\n        setToggleData(!toggleData);\n        setSubmittingWater(false);\n      }).catch((error) => {\n        console.log(error);\n        setSubmittingWater(false);\n      });\n      console.log(e);\n    }\n  };\n\n  return (\n    <ModalOuter id=\"close-modal\" open={open ? 1 : 0}>\n      <ModalInner>\n        <Action gap=\"1em\">\n          <AddItem onClick={() => { setFood(!food); setWater(false); }} tabIndex=\"0\" role=\"button\" align=\"center\" justify=\"center\" gap=\"1em\" column background=\"#FF5964\">\n            Add Food\n            <IconToolsKitchen2\n              size={36}\n              color=\"white\"\n              stroke={1}\n              strokeLinejoin=\"miter\"\n            />\n          </AddItem>\n          <AddItem onClick={() => { setWater(!water); setFood(false); }} tabIndex=\"0\" role=\"button\" align=\"center\" justify=\"center\" gap=\"1em\" column background=\"#59c2ff\">\n            Add Water\n            <IconRipple\n              size={36}\n              color=\"white\"\n              stroke={1}\n              strokeLinejoin=\"miter\"\n            />\n          </AddItem>\n        </Action>\n\n        {food ? (\n          <Menu>\n            <ProgressCont\n              title=\"Protein\"\n              current={proteinVal}\n              target={targets.protein}\n              unit=\"g\"\n              background=\"#FF5964\"\n              color=\"white\"\n            />\n            <ProgressCont\n              title=\"Calories\"\n              current={caloriesVal}\n              target={targets.calories}\n              unit=\"\"\n              background=\"#ffff59\"\n              color=\"black\"\n            />\n            <Line />\n            <form onSubmit={submitFood}>\n              <InputNum value={foodName} onChange={(e) => { setFoodName(e.target.value); }} required type=\"text\" placeholder=\"Enter Name of Food\" min=\"1\" max=\"124\" step=\"1\" />\n              <InputNum value={protein} onChange={(e) => { setProtein(e.target.value); }} required type=\"number\" placeholder=\"Enter Protein\" step=\"1\" />\n              <InputNum value={calories} onChange={(e) => { setCalories(e.target.value); }} required type=\"number\" placeholder=\"Enter calories\" step=\"50\" />\n              <InputNum value={key} onChange={(e) => { setKey(e.target.value); }} required type=\"number\" placeholder=\"Enter key\" />\n              <Submit background={submittingFood ? 'grey' : '#FF5964'} type=\"submit\">{submittingFood ? 'submitting' : 'Add Food'}</Submit>\n            </form>\n          </Menu>\n        ) : ''}\n\n        {water ? (\n          <Menu>\n            <ProgressCont\n              title=\"Calories\"\n              current={waterVal}\n              target={targets.water}\n              unit=\"ml\"\n              background=\"#59c2ff\"\n              color=\"white\"\n            />\n            <Line />\n            <form onSubmit={submitWater}>\n              <InputNum value={waterFormVal} onChange={(e) => { setwaterFormVal(e.target.value); }} required type=\"number\" placeholder=\"Enter in ml\" step=\"50\" />\n              <InputNum value={key} onChange={(e) => { setKey(e.target.value); }} required type=\"number\" placeholder=\"Enter key\" />\n              <Submit background={submittingWater ? 'grey' : '#59c2ff'} type=\"submit\">{submittingWater ? 'Submitting' : 'Add Water'}</Submit>\n            </form>\n          </Menu>\n        ) : ''}\n\n      </ModalInner>\n    </ModalOuter>\n  );\n};\n\nModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  caloriesVal: PropTypes.number.isRequired,\n  proteinVal: PropTypes.number.isRequired,\n  waterVal: PropTypes.number.isRequired,\n  setToggleData: PropTypes.func.isRequired,\n  toggleData: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  targets: PropTypes.object.isRequired,\n};\n\nexport default Modal;\n","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const TableCont = styled.table`\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 1em;\n`;\n\nexport const TableHead = styled.thead`\n    background: #FF5964;\n`;\n\nexport const ThRow = styled.tr`\n`;\n\nexport const ThCol = styled.th`\n    color: white;\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 300;\n    text-align: left;\n    padding: 0.25em;\n`;\n\nexport const TbRow = styled.tr`\n    border-bottom: 1px solid #dedede;\n`;\n\nexport const TbCol = styled.td`\n    padding: 0.25em;\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n    font-weight: 300;\n`;\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-console */\n/* eslint-disable func-names */\nimport {\n  React, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TableCont, TableHead, ThCol, ThRow, TbRow, TbCol,\n} from './Table.style';\n\nconst Table = function (props) {\n  const {\n    foodDiary,\n  } = props;\n\n  useEffect(() => {\n    console.log(foodDiary);\n  }, [foodDiary]);\n\n  const diaryEntries = foodDiary.map((entry) => (\n    <TbRow key={entry.id}>\n      <TbCol>{entry.name}</TbCol>\n      <TbCol>{entry.calories}</TbCol>\n      <TbCol>{entry.protein}</TbCol>\n    </TbRow>\n  ));\n\n  return (\n    <TableCont>\n      <TableHead>\n        <ThRow>\n          <ThCol>Food Name</ThCol>\n          <ThCol>Calories</ThCol>\n          <ThCol>Protein</ThCol>\n        </ThRow>\n      </TableHead>\n      <tbody>\n        {diaryEntries}\n      </tbody>\n    </TableCont>\n  );\n};\n\nTable.propTypes = {\n  foodDiary: PropTypes.array.isRequired,\n};\n\nexport default Table;\n","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const DashWrap = styled.div`\n    padding: 1em;\n`;\n\nexport const DashGrid = styled.div`\n    display: grid;\n    gap: 1em;\n    grid-template-columns: 1fr 1fr;\n`;\n\nexport const Tile = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    height: 150px;\n    background: white;\n    border-radius: 16px;\n    padding: 1em;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    grid-column: ${(props) => (props.spanning ? 'span 2' : 'auto')};\n`;\n\nexport const text = styled.h1`\n    font-family: 'Poppins', sans-serif;\n    font-size: 18px;\n    font-weight: 300;\n    color: #2e2e2e;\n`;\n\nexport const Title = styled(text)`\n    padding: 4px 16px;\n    border-radius: 8px;\n`;\n\nexport const Percent = styled(text)`\n    font-size: 36px;\n`;\n\nexport const Amount = styled(text)`\n    font-size: 14px;\n`;\n\nexport const Label = styled.div`\n    display: block;\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    background: ${(props) => (props.background ? props.background : 'none')};\n    padding: 2px 4px;\n    border-radius: 8px;\n`;\n","/* eslint-disable func-names */\nimport {\n  React, useEffect, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { IconBolt, IconMeat, IconRipple } from '@tabler/icons';\nimport Loader from 'react-loader-spinner';\nimport { DateTime } from 'luxon';\nimport Modal from '../Modal/Modal';\nimport Table from '../Table/Table';\nimport {\n  DashWrap, Tile, Title, Percent, Amount, Label, DashGrid,\n} from './Dash.style';\nimport { fetchDiary } from '../../api/api';\n\nconst Dash = function (props) {\n  const {\n    open,\n    setOpen,\n  } = props;\n\n  // State to hold data of food and water fetch request\n  const [foodDiary, setFoodDiary] = useState([]);\n  const [waterDiary, setWaterDiary] = useState([]);\n\n  // State data to hsummarized values\n  const [caloriesVal, setCaloriesVal] = useState(0);\n  const [proteinVal, setProteinVal] = useState(0);\n  const [waterVal, setWaterDrankVal] = useState(0);\n  const [fetching, setFetching] = useState(false);\n\n  // Toggle state is use to trigger a call of the fetch data useEffect\n  const [toggleData, setToggleData] = useState(true);\n\n  // Hard coded target value until functioality is added on the back end to store these\n  const targets = {\n    protein: 160,\n    calories: 2900,\n    water: 3000,\n  };\n\n  // Summarize the protein and calories values once the data is available\n  useEffect(() => {\n    if (foodDiary.length) {\n      setProteinVal(foodDiary.reduce((n, { protein }) => n + protein, 0));\n      setCaloriesVal(foodDiary.reduce((n, { calories }) => n + calories, 0));\n    }\n  }, [foodDiary]);\n\n  // Summarize the water values once the data is available\n  useEffect(() => {\n    if (waterDiary.length) {\n      setWaterDrankVal(waterDiary.reduce((n, { amount }) => n + amount, 0));\n    }\n  }, [waterDiary]);\n\n  // Make initial call to the db for todays diary of food and water\n  useEffect(() => {\n    let isSubscribed = true;\n    setFetching(true);\n    fetchDiary(DateTime.now().toFormat('y-LL-dd'))\n      .then((res) => {\n        if (isSubscribed) {\n          setFoodDiary(res.data.food_diary);\n          setWaterDiary(res.data.water_diary);\n          setFetching(false);\n        }\n      })\n      .catch(() => {\n        if (isSubscribed) {\n          setFetching(false);\n        }\n      });\n    return () => { isSubscribed = false; };\n  }, [toggleData]);\n\n  return (\n    <DashWrap>\n      <Modal\n        open={open}\n        setOpen={setOpen}\n        caloriesVal={caloriesVal}\n        proteinVal={proteinVal}\n        waterVal={waterVal}\n        targets={targets}\n        toggleData={toggleData}\n        setToggleData={setToggleData}\n      />\n      <DashGrid>\n        <Tile>\n          <Label background=\"#ffff59\">\n            <IconBolt color=\"black\" />\n          </Label>\n          <Title>Calories</Title>\n          <Percent>\n            {!fetching\n              ? `${Math.round((caloriesVal / targets.calories) * 100)}%`\n              : (<Loader type=\"TailSpin\" color=\"black\" height={40} width={40} />)}\n          </Percent>\n          <Amount>{caloriesVal ? `${caloriesVal}kcals` : ''}</Amount>\n        </Tile>\n        <Tile>\n          <Label background=\"#FF5964\">\n            <IconMeat color=\"white\" />\n          </Label>\n          <Title>Protein</Title>\n          <Percent>\n            {!fetching\n              ? `${Math.round((proteinVal / targets.protein) * 100)}%`\n              : (<Loader type=\"TailSpin\" color=\"black\" height={40} width={40} />)}\n          </Percent>\n          <Amount>{proteinVal ? `${proteinVal}g` : ''}</Amount>\n        </Tile>\n        <Tile spanning>\n          <Label background=\"#59c2ff\">\n            <IconRipple color=\"white\" />\n          </Label>\n          <Title>Water</Title>\n          <Percent>\n            {!fetching\n              ? `${Math.round((waterVal / targets.water) * 100)}%`\n              : (<Loader type=\"TailSpin\" color=\"black\" height={40} width={40} />)}\n          </Percent>\n          <Amount>{waterVal ? `${waterVal}ml` : ''}</Amount>\n        </Tile>\n      </DashGrid>\n      <Table foodDiary={foodDiary} />\n    </DashWrap>\n  );\n};\n\nDash.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n\nexport default Dash;\n","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport { FlexContainer } from '../../style/utility.style';\n\nexport const NavCont = styled(FlexContainer)`\n    background: #FF5964;\n`;\n\nexport const NavTitle = styled.h1`\n    font-family: 'Poppins', sans-serif;\n    color: white;\n    font-size: 24px;\n    font-weight: 300;\n    margin: 0.5em;\n`;\n\nexport const AddCont = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 60px;\n    width: auto;\n    aspect-ratio: 1/1;\n    cursor: pointer;\n`;\n","/* eslint-disable func-names */\nimport {\n  React, useEffect, useState,\n} from 'react';\nimport { IconCirclePlus } from '@tabler/icons';\nimport { DateTime } from 'luxon';\nimport PropTypes from 'prop-types';\nimport { NavCont, AddCont, NavTitle } from './Nav.style';\n\nconst Nav = function (props) {\n  const {\n    setOpen,\n  } = props;\n\n  const [date, setDate] = useState('');\n  useEffect(() => {\n    setDate(DateTime.now().toLocaleString({ month: 'long', day: 'numeric' }));\n  }, []);\n\n  return (\n    <NavCont justify=\"space-between\" align=\"center\">\n      <NavTitle>{date}</NavTitle>\n      <AddCont onClick={() => { setOpen(true); }}>\n        <IconCirclePlus\n          size={36}\n          color=\"white\"\n          stroke={1}\n          strokeLinejoin=\"miter\"\n        />\n      </AddCont>\n    </NavCont>\n  );\n};\n\nNav.propTypes = {\n  setOpen: PropTypes.func.isRequired,\n};\n\nexport default Nav;\n","import { React, useState } from 'react';\nimport Dash from './component/Dash/Dash';\nimport Nav from './component/Nav/Nav';\nimport './style/font.css';\nimport { GlobalStyle } from './style/utility.style';\n\n// eslint-disable-next-line func-names\nconst App = function () {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Nav setOpen={setOpen} />\n      <Dash open={open} setOpen={setOpen} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}